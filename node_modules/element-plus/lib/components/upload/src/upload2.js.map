{"version":3,"file":"upload2.js","sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\"></slot>\n      </template>\n    </upload-list>\n    <upload-content\n      ref=\"uploadRef\"\n      :type=\"type\"\n      :drag=\"drag\"\n      :action=\"action\"\n      :multiple=\"multiple\"\n      :with-credentials=\"withCredentials\"\n      :headers=\"headers\"\n      :method=\"method\"\n      :name=\"name\"\n      :data=\"data\"\n      :accept=\"accept\"\n      :file-list=\"uploadFiles\"\n      :auto-upload=\"autoUpload\"\n      :list-type=\"listType\"\n      :disabled=\"disabled\"\n      :limit=\"limit\"\n      :http-request=\"httpRequest\"\n      :before-upload=\"beforeUpload\"\n      :on-exceed=\"onExceed\"\n      :on-start=\"handleStart\"\n      :on-progress=\"handleProgress\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :on-remove=\"handleRemove\"\n    >\n      <template #default>\n        <slot v-if=\"$slots.trigger\" name=\"trigger\" />\n        <slot v-if=\"!$slots.trigger && $slots.default\" />\n      </template>\n    </upload-content>\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, provide, onBeforeUnmount, toRef, shallowRef } from 'vue'\nimport { uploadContextKey } from '@element-plus/tokens'\nimport { useDisabled } from '@element-plus/hooks'\n\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps } from './upload'\nimport type { UploadContentInstance } from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\nconst disabled = useDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(({ url }) => {\n    if (url?.startsWith('blob:')) URL.revokeObjectURL(url)\n  })\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA6EA;AAEA;AACA;;;;;;;;;;;AAYA;AAEA;;;;;;AAMA;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}