{"ast":null,"code":"import store from \"@/store/index.js\";\nexport default {\n  name: \"LeftMenu\",\n  data: function data() {\n    return {};\n  },\n  store: store,\n  computed: {\n    isCollapse: function isCollapse() {\n      return store.state.isCollapse;\n    },\n    currentMenuName: function currentMenuName() {\n      return store.state.currentMenu;\n    },\n    toDoTagsOptions: function toDoTagsOptions() {\n      return store.state.toDoTagsOptions;\n    }\n  },\n  methods: {\n    // 菜单切换事件，selec是回调函数\n    select: function select(index, indexPath, item, routeResult) {\n      console.log(\"当前选中菜单:\" + index + \",路径:\" + indexPath); // if (index === \"tagSetting\") {\n      //   index = \"todo\";\n      // }\n\n      store.commit(\"updateCurrentMenu\", index);\n    },\n    //  clickUpdateTagMenu()\n    // clickUpdateTagMenu() {\n    //   store.commit(\"updateCurrentMenu\", \"todo\");\n    //   // 让修改对话框出来\n    //   store.commit(\"updateShowUpdateTagMenu\", { status: true });\n    // },\n    tag: function tag(index) {\n      return \"/tag/\" + index;\n    },\n    getMenuName: function getMenuName(value) {\n      store.commit(\"updateCurrentFilterTagName\", value);\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,eAAe;AACbC,MAAI,EAAE,UADO;AAEbC,MAFa,kBAEN;AACL,WAAO,EAAP;AACD,GAJY;AAKbF,OAAK,EAALA,KALa;AAMbG,UAAQ,EAAE;AACRC,cADQ,wBACK;AACX,aAAOJ,KAAK,CAACK,KAAN,CAAYD,UAAnB;AACD,KAHO;AAIRE,mBAJQ,6BAIU;AAChB,aAAON,KAAK,CAACK,KAAN,CAAYE,WAAnB;AACD,KANO;AAORC,mBAPQ,6BAOU;AAChB,aAAOR,KAAK,CAACK,KAAN,CAAYG,eAAnB;AACD;AATO,GANG;AAiBbC,SAAO,EAAE;AACP;AACAC,UAAM,EAAE,gBAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,WAAlC,EAA+C;AACrDC,aAAO,CAACC,GAAR,CAAY,YAAYL,KAAZ,GAAoB,MAApB,GAA6BC,SAAzC,EADqD,CAErD;AACA;AACA;;AACAZ,WAAK,CAACiB,MAAN,CAAa,mBAAb,EAAkCN,KAAlC;AACD,KARM;AASP;AACA;AACA;AACA;AACA;AACA;AACAO,OAfO,eAeHP,KAfG,EAeI;AACT,aAAO,UAAUA,KAAjB;AACD,KAjBM;AAkBPQ,eAlBO,uBAkBKC,KAlBL,EAkBY;AACjBpB,WAAK,CAACiB,MAAN,CAAa,4BAAb,EAA2CG,KAA3C;AACD;AApBM;AAjBI,CAAf","names":["store","name","data","computed","isCollapse","state","currentMenuName","currentMenu","toDoTagsOptions","methods","select","index","indexPath","item","routeResult","console","log","commit","tag","getMenuName","value"],"sourceRoot":"","sources":["D:\\yqwwant\\.vscode\\.vscode\\TodoList记事本\\src\\components\\LeftMenu.vue"],"sourcesContent":["<template>\n  <div class=\"el-drawer-div\">\n    <el-menu\n      :default-active=\"currentMenuName\"\n      active-text-color=\"blue\"\n      class=\"el-menu-vertical-demo\"\n      :collapse=\"isCollapse\"\n      :router=\"true\"\n      @select=\"select\"\n    >\n      <el-menu-item index=\"/todo\">\n        <el-icon><list /></el-icon>\n        <template #title>记事</template>\n      </el-menu-item>\n      <el-menu-item index=\"/notifyToDo\">\n        <el-icon><bell /></el-icon>\n        <template #title>提醒</template>\n      </el-menu-item>\n      <div v-for=\"(item, index) in toDoTagsOptions\" :key=\"index\">\n        <el-menu-item :index=\"tag(index)\" @click=\"getMenuName(item.value)\">\n          <el-icon><price-tag /></el-icon>\n          <template #title>{{ item.value }}</template>\n        </el-menu-item>\n      </div>\n      <el-menu-item index=\"/tagSetting\" @click=\"clickUpdateTagMenu\">\n        <el-icon><edit-pen /></el-icon>\n        <template #title>修改标签</template>\n      </el-menu-item>\n      <el-menu-item index=\"/deletedToDo\">\n        <el-icon><delete /></el-icon>\n        <template #title>回收站</template>\n      </el-menu-item>\n    </el-menu>\n  </div>\n</template>\n<script>\nimport store from \"@/store/index.js\";\nexport default {\n  name: \"LeftMenu\",\n  data() {\n    return {};\n  },\n  store,\n  computed: {\n    isCollapse() {\n      return store.state.isCollapse;\n    },\n    currentMenuName() {\n      return store.state.currentMenu;\n    },\n    toDoTagsOptions() {\n      return store.state.toDoTagsOptions;\n    },\n  },\n  methods: {\n    // 菜单切换事件，selec是回调函数\n    select: function (index, indexPath, item, routeResult) {\n      console.log(\"当前选中菜单:\" + index + \",路径:\" + indexPath);\n      // if (index === \"tagSetting\") {\n      //   index = \"todo\";\n      // }\n      store.commit(\"updateCurrentMenu\", index);\n    },\n    //  clickUpdateTagMenu()\n    // clickUpdateTagMenu() {\n    //   store.commit(\"updateCurrentMenu\", \"todo\");\n    //   // 让修改对话框出来\n    //   store.commit(\"updateShowUpdateTagMenu\", { status: true });\n    // },\n    tag(index) {\n      return \"/tag/\" + index;\n    },\n    getMenuName(value) {\n      store.commit(\"updateCurrentFilterTagName\", value);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n// .el-drawer,.rtl{\n//   margin-top: 114px;\n// }\n// :deep(.el-drawer__body){\n//   background-color: blue;\n// }\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n  width: 100%;\n  max-height: 800px;\n  margin-top: 5px;\n}\n.el-menu-item.is-active {\n  background-color: #ee2b08;\n  color: #fff;\n}\n</style>"]},"metadata":{},"sourceType":"module"}