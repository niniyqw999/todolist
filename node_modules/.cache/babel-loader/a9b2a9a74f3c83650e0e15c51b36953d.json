{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/yqwwant/.vscode/.vscode/TodoList\\u8BB0\\u4E8B\\u672C/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    isCollapse: false,\n    currentMenu: '/todo',\n    // 记事标签\n    toDoTagsOptions: [{\n      value: \"学习\",\n      label: \"学习\"\n    }, {\n      value: \"生活\",\n      label: \"生活\"\n    }, {\n      value: \"工作\",\n      label: \"工作\"\n    }, {\n      value: \"家庭\",\n      label: \"家庭\"\n    }, {\n      value: \"美妆\",\n      label: \"美妆\"\n    }, {\n      value: \"感情\",\n      label: \"感情\"\n    }],\n    toDoLists: [{\n      title: \"记事1\",\n      content: '我今天学习了Vue框架',\n      toDoTime: '2023-07-08 09:38:42',\n      isCompleted: false,\n      isOutOfTime: false,\n      // 标签\n      toDoTags: [{\n        name: '学习'\n      }, {\n        name: '生活'\n      }, {\n        name: '工作'\n      }]\n    }, {\n      title: \"记事2\",\n      content: '今天学习了JavaScript',\n      toDoTime: '2023-07-07 13:50:43',\n      isCompleted: false,\n      isOutOfTime: false,\n      toDoTags: [{\n        name: '感情'\n      }, {\n        name: '学习'\n      }]\n    }, {\n      title: \"记事3\",\n      content: \"今天学习了HTML\",\n      toDoTime: '2023-07-09 15:00:00',\n      isCompleted: true,\n      isOutOfTime: false,\n      toDoTags: [{\n        name: '美妆'\n      }, {\n        name: '家庭'\n      }]\n    }, // 已完成\n    {\n      title: \"记事4\",\n      content: \"今天学习了CSS\",\n      toDoTime: '2023-07-9 12:00:00',\n      isCompleted: true,\n      isOutOfTime: false,\n      toDoTags: [{\n        name: '美妆'\n      }, {\n        name: '家庭'\n      }]\n    }, // 过期未完成\n    {\n      title: \"记事5\",\n      content: \"前端开发真有趣\",\n      toDoTime: '',\n      isCompleted: false,\n      isOutOfTime: true,\n      toDoTags: []\n    }],\n    // 已被删除的记事\n    deletedToDoLists: [],\n    // showUpdateTagMenu: false\n    searchContent: '',\n    searchResult: [],\n    currentFilterTagName: ''\n  },\n  getters: {\n    notifyToDoLosts: function notifyToDoLosts(state) {\n      // 需要提醒的记事，在toDoLists中进行过滤\n      return state.toDoLists.filter(function (todo) {\n        return todo.toDoTime !== '' && todo.toDoTime !== null;\n      });\n    },\n    getClickTagToDoList: function getClickTagToDoList(state) {\n      return function (tagName) {\n        // 根据标签名进行过滤\n        return state.toDoLists.filter(function (item) {\n          return item.toDoTags.findIndex(function (item2) {\n            return item2.name === tagName;\n          }) !== -1;\n        });\n      };\n    },\n    getSearchToDoLists: function getSearchToDoLists(state) {\n      return function (content) {\n        return state.toDoLists.filter(function (item) {\n          return item.title.indexOf(content) !== -1 || item.content.indexOf(content) !== -1;\n        });\n      };\n    }\n  },\n  mutations: {\n    updateCurrentMenu: function updateCurrentMenu(state, menuName) {\n      state.currentMenu = menuName;\n    },\n    addToDo: function addToDo(state, toDoObj) {\n      state.toDoLists.push(toDoObj);\n      console.log(\"调用vuex\");\n\n      var _iterator = _createForOfIteratorHelper(state.toDoLists),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          console.log(item.title);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    updateIsCollapse: function updateIsCollapse(state, val) {\n      state.isCollapse = val;\n    },\n    updateToDoListTag: function updateToDoListTag(state, playload) {\n      // console.log(\"调用vuex\" + tagObj.name + index);\n      state.toDoLists[playload.index].toDoTags.push(playload.tagObj);\n    },\n    updateToDoList: function updateToDoList(state, playload) {\n      state.toDoLists.splice(playload.index, 1, playload.toDoObj);\n    },\n    updateToDoTime: function updateToDoTime(state, playload) {\n      state.toDoLists[playload.index].toDoTime = playload.toDoTime;\n    },\n    updateToDoIsComplete: function updateToDoIsComplete(state, playload) {\n      state.toDoLists[playload.index].isCompleted = playload.isCompleted;\n    },\n    deleteToDo: function deleteToDo(state, playload) {\n      var deleteTodo = state.toDoLists.splice(playload.index, 1); // 往回收站写入被删除的记事\n\n      state.deletedToDoLists.push(deleteTodo[0]); // console.log(\"回收站:\" + state.deletedToDoLists[0].title);\n    },\n    // 从回收站写入数据\n    addDeletedToDoList: function addDeletedToDoList(state, playload) {\n      state.deletedToDoLists.push(playload.value);\n    },\n    // 从回收站还原\n    resetToDoFromRush: function resetToDoFromRush(state, playload) {\n      var val = state.deletedToDoLists.splice(playload.index, 1);\n      state.toDoLists.push(val[0]);\n    },\n    // 从回收站永久删除\n    foreverDelete: function foreverDelete(state, playload) {\n      state.deletedToDoLists.splice(playload.index, 1);\n    },\n    // 清空回收站\n    clearAllDelete: function clearAllDelete(state) {\n      state.deletedToDoLists = [];\n    },\n    // 创建新标签\n    addNewTag: function addNewTag(state, playload) {\n      state.toDoTagsOptions.push(playload);\n    },\n    // 更新标签名\n    updateToDoTagsOptions: function updateToDoTagsOptions(state, playload) {\n      state.toDoTagsOptions[playload.index].value = playload.value;\n      state.toDoTagsOptions[playload.index].label = playload.value;\n    },\n    // 删除标签\n    deleteToDoTagsOptions: function deleteToDoTagsOptions(state, playload) {\n      state.toDoTagsOptions.splice(playload.index, 1);\n    },\n    // updateShowUpdateTagMenu(state, playload) {\n    //   state.showUpdateTagMenu = playload.status\n    // }\n    updateSearchContent: function updateSearchContent(state, content) {\n      state.searchContent = content;\n    },\n    // 更新当前点击的标签名\n    updateCurrentFilterTagName: function updateCurrentFilterTagName(state, name) {\n      state.currentFilterTagName = name;\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"sources":["D:/yqwwant/.vscode/.vscode/TodoList记事本/src/store/index.js"],"names":["createStore","state","isCollapse","currentMenu","toDoTagsOptions","value","label","toDoLists","title","content","toDoTime","isCompleted","isOutOfTime","toDoTags","name","deletedToDoLists","searchContent","searchResult","currentFilterTagName","getters","notifyToDoLosts","filter","todo","getClickTagToDoList","tagName","item","findIndex","item2","getSearchToDoLists","indexOf","mutations","updateCurrentMenu","menuName","addToDo","toDoObj","push","console","log","updateIsCollapse","val","updateToDoListTag","playload","index","tagObj","updateToDoList","splice","updateToDoTime","updateToDoIsComplete","deleteToDo","deleteTodo","addDeletedToDoList","resetToDoFromRush","foreverDelete","clearAllDelete","addNewTag","updateToDoTagsOptions","deleteToDoTagsOptions","updateSearchContent","updateCurrentFilterTagName","actions","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    isCollapse: false,\n    currentMenu: '/todo',\n    // 记事标签\n    toDoTagsOptions: [{ value: \"学习\", label: \"学习\" },\n    { value: \"生活\", label: \"生活\" },\n    { value: \"工作\", label: \"工作\" },\n    { value: \"家庭\", label: \"家庭\" },\n    { value: \"美妆\", label: \"美妆\" },\n    { value: \"感情\", label: \"感情\" }],\n    toDoLists: [\n      {\n        title: \"记事1\",\n        content: '我今天学习了Vue框架',\n        toDoTime: '2023-07-08 09:38:42',\n        isCompleted: false,\n        isOutOfTime: false,\n        // 标签\n        toDoTags: [{ name: '学习' }, { name: '生活' }, { name: '工作' }]\n      },\n      {\n        title: \"记事2\",\n        content: '今天学习了JavaScript',\n        toDoTime: '2023-07-07 13:50:43',\n        isCompleted: false,\n        isOutOfTime: false,\n        toDoTags: [{ name: '感情' }, { name: '学习' }]\n      },\n      {\n        title: \"记事3\",\n        content: \"今天学习了HTML\",\n        toDoTime: '2023-07-09 15:00:00',\n        isCompleted: true,\n        isOutOfTime: false,\n        toDoTags: [{ name: '美妆' }, { name: '家庭' }]\n      },\n      // 已完成\n      {\n        title: \"记事4\",\n        content: \"今天学习了CSS\",\n        toDoTime: '2023-07-9 12:00:00',\n        isCompleted: true,\n        isOutOfTime: false,\n        toDoTags: [{ name: '美妆' }, { name: '家庭' }]\n      },\n      // 过期未完成\n      {\n        title: \"记事5\",\n        content: \"前端开发真有趣\",\n        toDoTime: '',\n        isCompleted: false,\n        isOutOfTime: true,\n        toDoTags: []\n      },\n    ],\n    // 已被删除的记事\n    deletedToDoLists: [],\n    // showUpdateTagMenu: false\n    searchContent: '',\n    searchResult: [],\n    currentFilterTagName: ''\n  },\n  getters: {\n    notifyToDoLosts(state) { // 需要提醒的记事，在toDoLists中进行过滤\n      return state.toDoLists.filter(function (todo) {\n        return todo.toDoTime !== '' && todo.toDoTime !== null\n      })\n    },\n    getClickTagToDoList: (state) => (tagName) => { // 根据标签名进行过滤\n      return state.toDoLists.filter(function (item) {\n        return (item.toDoTags.findIndex(item2 => item2.name === tagName)) !== -1\n      })\n    },\n    getSearchToDoLists: (state) => (content) => {\n      return state.toDoLists.filter(function (item) {\n        return (item.title.indexOf(content) !== -1 || item.content.indexOf(content) !== -1)\n      })\n    }\n  },\n  mutations: {\n    updateCurrentMenu(state, menuName) {\n      state.currentMenu = menuName;\n    },\n    addToDo(state, toDoObj) {\n      state.toDoLists.push(toDoObj);\n      console.log(\"调用vuex\")\n      for (const item of state.toDoLists) {\n        console.log(item.title);\n      }\n    },\n    updateIsCollapse(state, val) {\n      state.isCollapse = val;\n    },\n    updateToDoListTag(state, playload) {\n      // console.log(\"调用vuex\" + tagObj.name + index);\n      state.toDoLists[playload.index].toDoTags.push(playload.tagObj);\n    },\n    updateToDoList(state, playload) {\n      state.toDoLists.splice(playload.index, 1, playload.toDoObj)\n    },\n    updateToDoTime(state, playload) {\n      state.toDoLists[playload.index].toDoTime = playload.toDoTime;\n    },\n    updateToDoIsComplete(state, playload) {\n      state.toDoLists[playload.index].isCompleted = playload.isCompleted\n    },\n    deleteToDo(state, playload) {\n      const deleteTodo = state.toDoLists.splice(playload.index, 1)\n      // 往回收站写入被删除的记事\n      state.deletedToDoLists.push(deleteTodo[0]);\n      // console.log(\"回收站:\" + state.deletedToDoLists[0].title);\n    },\n    // 从回收站写入数据\n    addDeletedToDoList(state, playload) {\n      state.deletedToDoLists.push(playload.value);\n    },\n    // 从回收站还原\n    resetToDoFromRush(state, playload) {\n      const val = state.deletedToDoLists.splice(playload.index, 1)\n      state.toDoLists.push(val[0]);\n    },\n    // 从回收站永久删除\n    foreverDelete(state, playload) {\n      state.deletedToDoLists.splice(playload.index, 1)\n    },\n    // 清空回收站\n    clearAllDelete(state) {\n      state.deletedToDoLists = [];\n    },\n    // 创建新标签\n    addNewTag(state, playload) {\n      state.toDoTagsOptions.push(playload);\n    },\n    // 更新标签名\n    updateToDoTagsOptions(state, playload) {\n      state.toDoTagsOptions[playload.index].value = playload.value\n      state.toDoTagsOptions[playload.index].label = playload.value\n    },\n    // 删除标签\n    deleteToDoTagsOptions(state, playload) {\n      state.toDoTagsOptions.splice(playload.index, 1)\n    },\n    // updateShowUpdateTagMenu(state, playload) {\n    //   state.showUpdateTagMenu = playload.status\n    // }\n    updateSearchContent(state, content) {\n      state.searchContent = content\n    },\n    // 更新当前点击的标签名\n    updateCurrentFilterTagName(state, name) {\n      state.currentFilterTagName = name\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})"]},"metadata":{},"sourceType":"module"}