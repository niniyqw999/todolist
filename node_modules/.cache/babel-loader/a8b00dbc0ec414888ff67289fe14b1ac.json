{"ast":null,"code":"import _objectSpread from \"D:/yqwwant/.vscode/.vscode/TodoList\\u8BB0\\u4E8B\\u672C/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, shallowRef, computed, onBeforeUnmount, provide, toRef, openBlock, createElementBlock, unref, createBlock, createSlots, withCtx, renderSlot, createCommentVNode, createVNode } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _sfc_main$1 from './upload-list2.mjs';\nimport _sfc_main$2 from './upload-content2.mjs';\nimport { useHandlers } from './use-handlers.mjs';\nimport { uploadProps } from './upload.mjs';\nimport { useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { uploadContextKey } from '../../../tokens/upload.mjs';\nvar __default__ = {\n  name: \"ElUpload\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var disabled = useDisabled();\n    var uploadRef = shallowRef();\n\n    var _useHandlers = useHandlers(props, uploadRef),\n        abort = _useHandlers.abort,\n        submit = _useHandlers.submit,\n        clearFiles = _useHandlers.clearFiles,\n        uploadFiles = _useHandlers.uploadFiles,\n        handleStart = _useHandlers.handleStart,\n        handleError = _useHandlers.handleError,\n        handleRemove = _useHandlers.handleRemove,\n        handleSuccess = _useHandlers.handleSuccess,\n        handleProgress = _useHandlers.handleProgress;\n\n    var isPictureCard = computed(function () {\n      return props.listType === \"picture-card\";\n    });\n    onBeforeUnmount(function () {\n      uploadFiles.value.forEach(function (_ref2) {\n        var url = _ref2.url;\n        if (url == null ? void 0 : url.startsWith(\"blob:\")) URL.revokeObjectURL(url);\n      });\n    });\n    provide(uploadContextKey, {\n      accept: toRef(props, \"accept\")\n    });\n    expose({\n      abort: abort,\n      submit: submit,\n      clearFiles: clearFiles,\n      handleStart: handleStart,\n      handleRemove: handleRemove\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", null, [unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(_sfc_main$1, {\n        key: 0,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(function (_ref3) {\n          var file = _ref3.file;\n          return [renderSlot(_ctx.$slots, \"file\", {\n            file: file\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true), createVNode(_sfc_main$2, {\n        ref_key: \"uploadRef\",\n        ref: uploadRef,\n        type: _ctx.type,\n        drag: _ctx.drag,\n        action: _ctx.action,\n        multiple: _ctx.multiple,\n        \"with-credentials\": _ctx.withCredentials,\n        headers: _ctx.headers,\n        method: _ctx.method,\n        name: _ctx.name,\n        data: _ctx.data,\n        accept: _ctx.accept,\n        \"file-list\": unref(uploadFiles),\n        \"auto-upload\": _ctx.autoUpload,\n        \"list-type\": _ctx.listType,\n        disabled: unref(disabled),\n        limit: _ctx.limit,\n        \"http-request\": _ctx.httpRequest,\n        \"before-upload\": _ctx.beforeUpload,\n        \"on-exceed\": _ctx.onExceed,\n        \"on-start\": unref(handleStart),\n        \"on-progress\": unref(handleProgress),\n        \"on-success\": unref(handleSuccess),\n        \"on-error\": unref(handleError),\n        \"on-remove\": unref(handleRemove)\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.$slots.trigger ? renderSlot(_ctx.$slots, \"trigger\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true), !_ctx.$slots.trigger && _ctx.$slots[\"default\"] ? renderSlot(_ctx.$slots, \"default\", {\n            key: 1\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"type\", \"drag\", \"action\", \"multiple\", \"with-credentials\", \"headers\", \"method\", \"name\", \"data\", \"accept\", \"file-list\", \"auto-upload\", \"list-type\", \"disabled\", \"limit\", \"http-request\", \"before-upload\", \"on-exceed\", \"on-start\", \"on-progress\", \"on-success\", \"on-error\", \"on-remove\"]), _ctx.$slots.trigger ? renderSlot(_ctx.$slots, \"default\", {\n        key: 1\n      }) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"tip\"), !unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(_sfc_main$1, {\n        key: 2,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(function (_ref4) {\n          var file = _ref4.file;\n          return [renderSlot(_ctx.$slots, \"file\", {\n            file: file\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true)]);\n    };\n  }\n}));\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AAEA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA;AAAA;AAAA;AAEAA;;;;;KAAA;AAMAC;;AAAA;AAIAC;kBAAA;oBAAA;4BAAA;8BAAA;;AAAA","names":["onBeforeUnmount","provide","expose"],"sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\"></slot>\n      </template>\n    </upload-list>\n    <upload-content\n      ref=\"uploadRef\"\n      :type=\"type\"\n      :drag=\"drag\"\n      :action=\"action\"\n      :multiple=\"multiple\"\n      :with-credentials=\"withCredentials\"\n      :headers=\"headers\"\n      :method=\"method\"\n      :name=\"name\"\n      :data=\"data\"\n      :accept=\"accept\"\n      :file-list=\"uploadFiles\"\n      :auto-upload=\"autoUpload\"\n      :list-type=\"listType\"\n      :disabled=\"disabled\"\n      :limit=\"limit\"\n      :http-request=\"httpRequest\"\n      :before-upload=\"beforeUpload\"\n      :on-exceed=\"onExceed\"\n      :on-start=\"handleStart\"\n      :on-progress=\"handleProgress\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :on-remove=\"handleRemove\"\n    >\n      <template #default>\n        <slot v-if=\"$slots.trigger\" name=\"trigger\" />\n        <slot v-if=\"!$slots.trigger && $slots.default\" />\n      </template>\n    </upload-content>\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, provide, onBeforeUnmount, toRef, shallowRef } from 'vue'\nimport { uploadContextKey } from '@element-plus/tokens'\nimport { useDisabled } from '@element-plus/hooks'\n\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps } from './upload'\nimport type { UploadContentInstance } from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\nconst disabled = useDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(({ url }) => {\n    if (url?.startsWith('blob:')) URL.revokeObjectURL(url)\n  })\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}