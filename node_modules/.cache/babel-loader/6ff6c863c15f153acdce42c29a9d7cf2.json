{"ast":null,"code":"import _typeof from \"D:/yqwwant/.vscode/.vscode/TodoList\\u8BB0\\u4E8B\\u672C/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { defineComponent, inject, computed, createVNode } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar colProps = buildProps({\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  span: {\n    type: Number,\n    \"default\": 24\n  },\n  offset: {\n    type: Number,\n    \"default\": 0\n  },\n  pull: {\n    type: Number,\n    \"default\": 0\n  },\n  push: {\n    type: Number,\n    \"default\": 0\n  },\n  xs: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  sm: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  md: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  lg: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  xl: {\n    type: definePropType([Number, Object]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  }\n});\nvar Col = defineComponent({\n  name: \"ElCol\",\n  props: colProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _inject = inject(\"ElRow\", {\n      gutter: {\n        value: 0\n      }\n    }),\n        gutter = _inject.gutter;\n\n    var ns = useNamespace(\"col\");\n    var style = computed(function () {\n      if (gutter.value) {\n        return {\n          paddingLeft: \"\".concat(gutter.value / 2, \"px\"),\n          paddingRight: \"\".concat(gutter.value / 2, \"px\")\n        };\n      }\n\n      return {};\n    });\n    var classes = computed(function () {\n      var classes2 = [];\n      var pos = [\"span\", \"offset\", \"pull\", \"push\"];\n      pos.forEach(function (prop) {\n        var size = props[prop];\n\n        if (typeof size === \"number\") {\n          if (prop === \"span\") classes2.push(ns.b(\"\".concat(props[prop])));else if (size > 0) classes2.push(ns.b(\"\".concat(prop, \"-\").concat(props[prop])));\n        }\n      });\n      var sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\n      sizes.forEach(function (size) {\n        if (typeof props[size] === \"number\") {\n          classes2.push(ns.b(\"\".concat(size, \"-\").concat(props[size])));\n        } else if (_typeof(props[size]) === \"object\") {\n          var sizeProps = props[size];\n          Object.keys(sizeProps).forEach(function (prop) {\n            classes2.push(prop !== \"span\" ? ns.b(\"\".concat(size, \"-\").concat(prop, \"-\").concat(sizeProps[prop])) : ns.b(\"\".concat(size, \"-\").concat(sizeProps[prop])));\n          });\n        }\n      });\n\n      if (gutter.value) {\n        classes2.push(ns.is(\"guttered\"));\n      }\n\n      return classes2;\n    });\n    return function () {\n      return createVNode(props.tag, {\n        \"class\": [ns.b(), classes.value],\n        \"style\": style.value\n      }, slots);\n    };\n  }\n});\nexport { colProps, Col as default };","map":{"version":3,"mappings":"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","names":["colProps","buildProps","tag","type","String","default","span","Number","offset","pull","push","xs","definePropType","Object","mutable","sm","md","lg","xl","defineComponent","name","props","slots","setup","gutter","ns","useNamespace","style","paddingLeft","value","pos","prop","size","classes2","classes","b","sizes","forEach","sizeProps","keys"],"sources":["../../../../../../packages/components/col/src/col.tsx"],"sourcesContent":["import { defineComponent, computed, inject } from 'vue'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ExtractPropTypes, CSSProperties } from 'vue'\n\nexport type ColSizeObject = {\n  span?: number\n  offset?: number\n}\nexport type ColSize = number | ColSizeObject\n\nexport const colProps = buildProps({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  span: {\n    type: Number,\n    default: 24,\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  pull: {\n    type: Number,\n    default: 0,\n  },\n  push: {\n    type: Number,\n    default: 0,\n  },\n  xs: {\n    type: definePropType<ColSize>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  sm: {\n    type: definePropType<ColSize>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  md: {\n    type: definePropType<ColSize>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  lg: {\n    type: definePropType<ColSize>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  xl: {\n    type: definePropType<ColSize>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type ColProps = ExtractPropTypes<typeof colProps>\n\nexport default defineComponent({\n  name: 'ElCol',\n  props: colProps,\n\n  setup(props, { slots }) {\n    const { gutter } = inject('ElRow', { gutter: { value: 0 } })\n    const ns = useNamespace('col')\n\n    const style = computed<CSSProperties>(() => {\n      if (gutter.value) {\n        return {\n          paddingLeft: `${gutter.value / 2}px`,\n          paddingRight: `${gutter.value / 2}px`,\n        }\n      }\n      return {}\n    })\n\n    const classes = computed(() => {\n      const classes: string[] = []\n\n      const pos = ['span', 'offset', 'pull', 'push'] as const\n      pos.forEach((prop) => {\n        const size = props[prop]\n        if (typeof size === 'number') {\n          if (prop === 'span') classes.push(ns.b(`${props[prop]}`))\n          else if (size > 0) classes.push(ns.b(`${prop}-${props[prop]}`))\n        }\n      })\n\n      const sizes = ['xs', 'sm', 'md', 'lg', 'xl'] as const\n      sizes.forEach((size) => {\n        if (typeof props[size] === 'number') {\n          classes.push(ns.b(`${size}-${props[size]}`))\n        } else if (typeof props[size] === 'object') {\n          const sizeProps = props[size]\n          Object.keys(sizeProps).forEach((prop) => {\n            classes.push(\n              prop !== 'span'\n                ? ns.b(`${size}-${prop}-${sizeProps[prop]}`)\n                : ns.b(`${size}-${sizeProps[prop]}`)\n            )\n          })\n        }\n      })\n      // this is for the fix\n      if (gutter.value) {\n        classes.push(ns.is('guttered'))\n      }\n\n      return classes\n    })\n\n    return () => (\n      <props.tag\n        v-slots={slots}\n        class={[ns.b(), classes.value]}\n        style={style.value}\n      />\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}