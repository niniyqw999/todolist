{"ast":null,"code":"import _objectSpread from \"D:/yqwwant/.vscode/.vscode/TodoList\\u8BB0\\u4E8B\\u672C/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { placements } from '@popperjs/core';\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nvar effects = [\"light\", \"dark\"];\nvar triggers = [\"click\", \"contextmenu\", \"hover\", \"focus\"];\nvar Effect = {\n  LIGHT: \"light\",\n  DARK: \"dark\"\n};\nvar usePopperArrowProps = buildProps({\n  arrowOffset: {\n    type: Number,\n    \"default\": 5\n  }\n});\nvar usePopperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    \"default\": 0\n  },\n  fallbackPlacements: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    \"default\": true\n  },\n  offset: {\n    type: Number,\n    \"default\": 12\n  },\n  placement: {\n    type: String,\n    values: placements,\n    \"default\": \"bottom\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return {};\n    }\n  },\n  strategy: {\n    type: String,\n    values: [\"fixed\", \"absolute\"],\n    \"default\": \"absolute\"\n  }\n});\nvar usePopperProps = buildProps({\n  autoClose: {\n    type: Number,\n    \"default\": 0\n  },\n  cutoff: {\n    type: Boolean,\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  }\n});\nvar usePopperContentProps = buildProps(_objectSpread(_objectSpread({}, usePopperCoreConfigProps), {}, {\n  style: {\n    type: definePropType([String, Array, Object])\n  },\n  className: {\n    type: definePropType([String, Array, Object])\n  },\n  effect: {\n    type: String,\n    \"default\": \"dark\"\n  },\n  visible: {\n    type: Boolean\n  },\n  enterable: {\n    type: Boolean,\n    \"default\": true\n  },\n  pure: {\n    type: Boolean\n  },\n  popperClass: {\n    type: definePropType([String, Array, Object])\n  },\n  popperStyle: {\n    type: definePropType([String, Array, Object])\n  },\n  referenceEl: {\n    type: definePropType(Object)\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  zIndex: Number\n}));\nvar usePopperTriggerProps = buildProps({\n  virtualRef: {\n    type: definePropType(Object)\n  },\n  virtualTriggering: {\n    type: Boolean\n  }\n});\nexport { Effect, usePopperArrowProps, usePopperContentProps, usePopperCoreConfigProps, usePopperProps, usePopperTriggerProps };","map":{"version":3,"mappings":"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","names":["effects","triggers","Effect","LIGHT","DARK","usePopperArrowProps","buildProps","arrowOffset","type","Number","usePopperCoreConfigProps","boundariesPadding","fallbackPlacements","definePropType","Array","gpuAcceleration","Boolean","offset","placement","String","values","placements","popperOptions","Object","strategy","usePopperProps","autoClose","cutoff","disabled","usePopperContentProps","style","className","effect","visible","enterable","pure","popperClass","popperStyle","referenceEl","stopPopperMouseEvent","zIndex","usePopperTriggerProps","virtualRef","virtualTriggering"],"sources":["../../../../../../packages/components/popper/src/popper.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { Placement, Options } from '@popperjs/core'\n\nconst effects = ['light', 'dark'] as const\nconst triggers = ['click', 'contextmenu', 'hover', 'focus'] as const\n\nexport const Effect = {\n  LIGHT: 'light',\n  DARK: 'dark',\n}\n\nexport type PopperEffect = typeof effects[number]\nexport type PopperTrigger = typeof triggers[number]\nexport type Measurable = {\n  getBoundingClientRect: () => DOMRect\n}\n\ntype ClassObjectType = Record<string, any>\ntype ClassType = string | ClassObjectType | ClassType[]\n\nexport const usePopperArrowProps = buildProps({\n  arrowOffset: {\n    type: Number,\n    default: 5,\n  },\n} as const)\n\nexport const usePopperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    default: 0,\n  },\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: () => [],\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    default: true,\n  },\n  offset: {\n    type: Number,\n    default: 12,\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: 'bottom',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  strategy: {\n    type: String,\n    values: ['fixed', 'absolute'] as const,\n    default: 'absolute',\n  },\n} as const)\n\nexport const usePopperProps = buildProps({\n  autoClose: {\n    type: Number,\n    default: 0,\n  },\n  cutoff: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const usePopperContentProps = buildProps({\n  ...usePopperCoreConfigProps,\n  style: { type: definePropType<StyleValue>([String, Array, Object]) },\n  className: { type: definePropType<ClassType>([String, Array, Object]) },\n  effect: {\n    type: String,\n    default: 'dark',\n  },\n  visible: {\n    type: Boolean,\n  },\n  enterable: {\n    type: Boolean,\n    default: true,\n  },\n  pure: {\n    type: Boolean,\n  },\n  popperClass: {\n    type: definePropType<ClassType>([String, Array, Object]),\n  },\n  popperStyle: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n  },\n  referenceEl: {\n    type: definePropType<HTMLElement>(Object),\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true,\n  },\n  zIndex: Number,\n} as const)\n\nexport const usePopperTriggerProps = buildProps({\n  virtualRef: {\n    type: definePropType<Measurable>(Object),\n  },\n  virtualTriggering: {\n    type: Boolean,\n  },\n} as const)\n\nexport type UsePopperProps = ExtractPropTypes<typeof usePopperProps>\nexport type UsePopperCoreConfigProps = ExtractPropTypes<\n  typeof usePopperCoreConfigProps\n>\n"]},"metadata":{},"sourceType":"module"}