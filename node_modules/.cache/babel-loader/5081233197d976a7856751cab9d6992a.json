{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport store from \"@/store/index.js\";\nimport { ElMessageBox, ElMessage } from \"element-plus\";\nexport default {\n  name: \"NotifyToDoView\",\n  data: function data() {\n    return {\n      currentLi: 0,\n      isShowFooter: false,\n      selectVisible: [],\n      isShowDatePicker: [],\n      tagValue: \"\",\n      toDoTime: \"\",\n      shortcuts: [{\n        text: \"今天\",\n        value: new Date()\n      }, {\n        text: \"昨天\",\n        value: function value() {\n          var date = new Date();\n          date.setTime(date.getTime() - 3600 * 1000 * 24);\n          return date;\n        }\n      }, {\n        text: \"一周前\",\n        value: function value() {\n          var date = new Date();\n          date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n          return date;\n        }\n      }]\n    };\n  },\n  store: store,\n  computed: {\n    // 需要提醒的记事\n    notifyToDoLosts: function notifyToDoLosts() {\n      return store.getters.notifyToDoLosts;\n    },\n    isNull: function isNull() {\n      if (this.notifyToDoLosts.length === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 标签选择器\n    toDoTagsOptions: function toDoTagsOptions() {\n      return store.state.toDoTagsOptions;\n    }\n  },\n  methods: {\n    getFocus: function getFocus($event, index) {\n      this.currentLi = index;\n      this.isShowFooter = true;\n    },\n    removeFocus: function removeFocus($event) {\n      this.currentLi = null;\n      this.isShowFooter = false;\n    },\n    updateToDoListTag: function updateToDoListTag(index, tagObj) {\n      // store.commit(\"updateToDoListTag\", { index: index, tagObj: tagObj });\n      this.notifyToDoLosts[index].toDoTags.push(tagObj);\n    },\n    handleClose: function handleClose(name) {\n      var _this = this;\n\n      this.notifyToDoLosts[this.currentLi].toDoTags.forEach(function (item) {\n        if (name === item.name) {\n          _this.notifyToDoLosts[_this.currentLi].toDoTags.splice(_this.notifyToDoLosts[_this.currentLi].toDoTags.indexOf(item), 1);\n        }\n      });\n    },\n    change: function change(val, index) {\n      var _this2 = this;\n\n      // alert(\"当前选择:\" + val);\n      var isFlag = false;\n      this.notifyToDoLosts[index].toDoTags.forEach(function (item) {\n        if (val === item.name) {\n          isFlag = true;\n          ElMessage({\n            type: \"error\",\n            message: \"不能新增已有的标签\"\n          });\n        }\n      });\n\n      if (!isFlag) {\n        ElMessageBox.confirm(\"当前选择新增标签为:\" + val + \"，确认新增?\", \"提示\", {\n          confirmButtonText: \"确认\",\n          cancelButtonText: \"取消\",\n          type: \"info\"\n        }).then(function () {\n          // 新增标签逻辑\n          var tagObj = {\n            name: val\n          };\n\n          _this2.updateToDoListTag(index, tagObj);\n\n          _this2.selectVisible[index] = false;\n          ElMessage({\n            type: \"success\",\n            message: \"新增标签成功\"\n          });\n        })[\"catch\"](function () {\n          // 新增失败\n          _this2.selectVisible[index] = false;\n          ElMessage({\n            type: \"error\",\n            message: \"取消新增\"\n          });\n        });\n      }\n    },\n    // change\n    editToDoTime: function editToDoTime(index) {\n      // alert(\"修改todoTime\");\n      this.isShowDatePicker[index] = true;\n    },\n    timeChange: function timeChange(value, index) {\n      // store.commit(\"updateToDoTime\", {\n      //   index: index,\n      //   toDoTime: value,\n      // });\n      this.notifyToDoLosts[index].toDoTime = value;\n      this.isShowDatePicker[index] = false;\n\n      if (value === \"\" || value === null) {\n        // 删除提醒时间\n        ElMessage({\n          message: \"已从提醒中移除\",\n          center: true,\n          type: \"success\" // offset: 150\n\n        });\n      } else {\n        ElMessage({\n          message: \"修改提醒时间成功\",\n          center: true,\n          type: \"success\" // offset: 150\n\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    store.state.toDoLists.forEach(function (item) {\n      _this3.selectVisible.push(false);\n\n      _this3.isShowDatePicker.push(false);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["store","ElMessageBox","ElMessage","name","data","currentLi","isShowFooter","selectVisible","isShowDatePicker","tagValue","toDoTime","shortcuts","text","value","Date","date","setTime","getTime","computed","notifyToDoLosts","getters","isNull","length","toDoTagsOptions","state","methods","getFocus","$event","index","removeFocus","updateToDoListTag","tagObj","toDoTags","push","handleClose","forEach","item","splice","indexOf","change","val","isFlag","type","message","confirm","confirmButtonText","cancelButtonText","then","editToDoTime","timeChange","center","mounted","toDoLists"],"sourceRoot":"","sources":["D:\\yqwwant\\.vscode\\.vscode\\TodoList记事本\\src\\views\\NotifyToDoView.vue"],"sourcesContent":["<template>\n  <div class=\"contentDiv\" v-if=\"isNull\">\n    <div class=\"noContentDiv\">\n      <!--提醒无内容-->\n      <el-icon style=\"font-size: 50px\"><bell /></el-icon>\n      <p>内含提醒时间的记事会显示在此处</p>\n    </div>\n  </div>\n  <div v-else>\n    <!--展示提醒内容-->\n    <el-row>\n      <el-col\n        v-for=\"(notifyItem, index) in notifyToDoLosts\"\n        :key=\"notifyItem\"\n        :span=\"6\"\n        class=\"el-col-style\"\n        :offset=\"index > 0 ? 2 : 0\"\n        @mouseenter=\"getFocus($event, index)\"\n        @mouseleave=\"removeFocus($event)\"\n      >\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <div style=\"padding: 14px\">\n            <div class=\"header\" style=\"overflow: hidden\">\n              <h2 style=\"float: left\">{{ notifyItem.title }}</h2>\n              <el-button\n                circle\n                style=\"float: right; border: none\"\n                v-show=\"notifyItem.isCompleted === true\"\n              >\n                <el-icon><finished /></el-icon>\n              </el-button>\n            </div>\n            <div class=\"content\">\n              {{ notifyItem.content }}\n            </div>\n            <div class=\"tag\">\n              <el-tag\n                v-for=\"tag of notifyItem.toDoTags\"\n                :key=\"tag.name\"\n                type=\"\"\n                class=\"mx-1\"\n                size=\"small\"\n                closable\n                :disable-transitions=\"false\"\n                @close=\"handleClose(tag.name)\"\n              >\n                {{ tag.name }}\n              </el-tag>\n              <el-popover\n                v-if=\"\n                  !selectVisible[index] && isShowFooter && currentLi === index\n                \"\n                placement=\"bottom-start\"\n                title=\"\"\n                :width=\"150\"\n                trigger=\"hover\"\n                content=\"增加标签\"\n              >\n                <template #reference>\n                  <el-button\n                    size=\"small\"\n                    style=\"margin-top: 2px; border: none\"\n                    @click=\"selectVisible[index] = true\"\n                    ><el-icon><plus /></el-icon\n                  ></el-button> </template\n              ></el-popover>\n              <!--标签选择框-->\n              <el-select\n                v-model=\"tagValue\"\n                v-if=\"selectVisible[index]\"\n                class=\"m-2 tagSelect\"\n                placeholder=\"Select a tag\"\n                size=\"small\"\n                @change=\"change(tagValue, index)\"\n                filterable\n              >\n                <el-option\n                  v-for=\"item in toDoTagsOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"bottom\">\n              <div>\n                <div v-if=\"!isShowDatePicker[index]\">\n                  <el-popover\n                    placement=\"bottom-start\"\n                    title=\"\"\n                    :width=\"150\"\n                    trigger=\"hover\"\n                    content=\"修改时间\"\n                  >\n                    <template #reference>\n                      <el-button\n                        v-show=\"isShowFooter && currentLi === index\"\n                        circle\n                        style=\"border: none; margin-top: -3px\"\n                        size=\"small\"\n                        class=\"edit-todoTime\"\n                      >\n                        <el-icon color=\"gray\" @click=\"editToDoTime(index)\"\n                          ><edit-pen /></el-icon></el-button></template\n                  ></el-popover>\n                  <p\n                    class=\"todoTime\"\n                    :class=\"\n                      new Date(notifyItem.toDoTime).getTime() <\n                      new Date().getTime()\n                        ? 'line-through'\n                        : ''\n                    \"\n                  >\n                    {{ notifyItem.toDoTime }}\n                  </p>\n                  <el-icon class=\"alert-icon\"><clock /></el-icon>\n                </div>\n                <el-date-picker\n                  v-if=\"isShowDatePicker[index]\"\n                  v-model=\"toDoTime\"\n                  type=\"datetime\"\n                  :shortcuts=\"shortcuts\"\n                  value-format=\"YYYY-MM-DD hh:mm:ss\"\n                  size=\"small\"\n                  clearable\n                  @change=\"timeChange(toDoTime, index)\"\n                >\n                </el-date-picker>\n              </div>\n              <div v-show=\"isShowBottom && currentLi === index\"></div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script>\nimport store from \"@/store/index.js\";\nimport { ElMessageBox, ElMessage } from \"element-plus\";\nexport default {\n  name: \"NotifyToDoView\",\n  data() {\n    return {\n      currentLi: 0,\n      isShowFooter: false,\n      selectVisible: [],\n      isShowDatePicker: [],\n      tagValue: \"\",\n      toDoTime: \"\",\n      shortcuts: [\n        {\n          text: \"今天\",\n          value: new Date(),\n        },\n        {\n          text: \"昨天\",\n          value: () => {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            return date;\n          },\n        },\n        {\n          text: \"一周前\",\n          value: () => {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            return date;\n          },\n        },\n      ],\n    };\n  },\n  store,\n  computed: {\n    // 需要提醒的记事\n    notifyToDoLosts() {\n      return store.getters.notifyToDoLosts;\n    },\n    isNull() {\n      if (this.notifyToDoLosts.length === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 标签选择器\n    toDoTagsOptions() {\n      return store.state.toDoTagsOptions;\n    },\n  },\n  methods: {\n    getFocus($event, index) {\n      this.currentLi = index;\n      this.isShowFooter = true;\n    },\n    removeFocus($event) {\n      this.currentLi = null;\n      this.isShowFooter = false;\n    },\n    updateToDoListTag(index, tagObj) {\n      // store.commit(\"updateToDoListTag\", { index: index, tagObj: tagObj });\n      this.notifyToDoLosts[index].toDoTags.push(tagObj);\n    },\n    handleClose(name) {\n      this.notifyToDoLosts[this.currentLi].toDoTags.forEach((item) => {\n        if (name === item.name) {\n          this.notifyToDoLosts[this.currentLi].toDoTags.splice(\n            this.notifyToDoLosts[this.currentLi].toDoTags.indexOf(item),\n            1\n          );\n        }\n      });\n    },\n    change(val, index) {\n      // alert(\"当前选择:\" + val);\n      let isFlag = false;\n      this.notifyToDoLosts[index].toDoTags.forEach((item) => {\n        if (val === item.name) {\n          isFlag = true;\n          ElMessage({\n            type: \"error\",\n            message: \"不能新增已有的标签\",\n          });\n        }\n      });\n      if (!isFlag) {\n        ElMessageBox.confirm(\n          \"当前选择新增标签为:\" + val + \"，确认新增?\",\n          \"提示\",\n          {\n            confirmButtonText: \"确认\",\n            cancelButtonText: \"取消\",\n            type: \"info\",\n          }\n        )\n          .then(() => {\n            // 新增标签逻辑\n            const tagObj = { name: val };\n            this.updateToDoListTag(index, tagObj);\n            this.selectVisible[index] = false;\n            ElMessage({\n              type: \"success\",\n              message: \"新增标签成功\",\n            });\n          })\n          .catch(() => {\n            // 新增失败\n            this.selectVisible[index] = false;\n            ElMessage({\n              type: \"error\",\n              message: \"取消新增\",\n            });\n          });\n      }\n    }, // change\n    editToDoTime(index) {\n      // alert(\"修改todoTime\");\n      this.isShowDatePicker[index] = true;\n    },\n    timeChange(value, index) {\n      // store.commit(\"updateToDoTime\", {\n      //   index: index,\n      //   toDoTime: value,\n      // });\n      this.notifyToDoLosts[index].toDoTime = value;\n      this.isShowDatePicker[index] = false;\n      if (value === \"\" || value === null) {\n        // 删除提醒时间\n        ElMessage({\n          message: \"已从提醒中移除\",\n          center: true,\n          type: \"success\",\n          // offset: 150\n        });\n      } else {\n        ElMessage({\n          message: \"修改提醒时间成功\",\n          center: true,\n          type: \"success\",\n          // offset: 150\n        });\n      }\n    },\n  },\n  mounted() {\n    store.state.toDoLists.forEach((item) => {\n      this.selectVisible.push(false);\n      this.isShowDatePicker.push(false);\n    });\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.contentDiv {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n.noContentDiv {\n  position: absolute;\n  text-align: center;\n  font-size: 30px;\n  color: gray;\n  height: 500px;\n  width: 100%;\n  top: 70%;\n  margin-top: -250px;\n}\n.button-icon {\n  margin-right: 20px;\n}\n.el-tag {\n  margin-right: 10px;\n}\n.todoTime {\n  float: right;\n  font-size: 14px;\n}\n.alert-icon {\n  float: right;\n  margin-bottom: 5px;\n}\n.edit-todoTime {\n  margin-left: 5px;\n  float: right;\n}\n.header,\n.content,\n.tag,\n.bottom {\n  margin-bottom: 10px;\n}\n.tagSelect {\n  width: 100px;\n  margin-top: 5px;\n}\n.line-through {\n  text-decoration: line-through;\n  color: gray;\n}\n.el-col-style {\n  margin-top: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}